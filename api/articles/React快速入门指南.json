{"title":"React快速入门指南","uid":"3fbb98420a779e5fc825c93037d4aa9e","slug":"React快速入门指南","date":"2023-04-18T15:41:07.000Z","updated":"2023-04-18T15:43:18.304Z","comments":true,"path":"api/articles/React快速入门指南.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2023/03/29/92ec479377e5a687.webp","content":"<h1 id=\"React-快速入门指南\"><a href=\"#React-快速入门指南\" class=\"headerlink\" title=\"React 快速入门指南\"></a>React 快速入门指南</h1><p>React 是 Facebook 推出的用于构建用户界面的 JavaScript 库。它提供了一种声明式编程模式，使得构建复杂的 UI 变得更加容易。本文将介绍 React 的基本概念和使用方法。</p>\n<h2 id=\"React-的基本概念\"><a href=\"#React-的基本概念\" class=\"headerlink\" title=\"React 的基本概念\"></a>React 的基本概念</h2><h3 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h3><p>在 React 中，UI 被抽象成一个个组件。一个组件可以是一个简单的按钮或者一个复杂的表单。组件可以接受参数（props）和状态（state），并且可以根据这些参数和状态来渲染出不同的 UI。</p>\n<h3 id=\"JSX\"><a href=\"#JSX\" class=\"headerlink\" title=\"JSX\"></a>JSX</h3><p>JSX 是一种在 JavaScript 中嵌入 HTML 的语法。它使得在 JavaScript 中构建 UI 变得更加自然。</p>\n<h3 id=\"虚拟-DOM\"><a href=\"#虚拟-DOM\" class=\"headerlink\" title=\"虚拟 DOM\"></a>虚拟 DOM</h3><p>React 使用虚拟 DOM 来管理 UI 的状态。虚拟 DOM 是一个轻量级的 JavaScript 对象树，它描述了 UI 的状态。当 UI 的状态发生变化时，React 会比较新旧两棵虚拟 DOM 树，找出变化的部分并更新 UI。</p>\n<h2 id=\"React-的使用方法\"><a href=\"#React-的使用方法\" class=\"headerlink\" title=\"React 的使用方法\"></a>React 的使用方法</h2><h3 id=\"安装-React\"><a href=\"#安装-React\" class=\"headerlink\" title=\"安装 React\"></a>安装 React</h3><p>要使用 React，首先需要安装 React 库。可以通过 npm 来安装：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install react react-dom</code></pre>\n\n<h3 id=\"创建组件\"><a href=\"#创建组件\" class=\"headerlink\" title=\"创建组件\"></a>创建组件</h3><p>在 React 中，创建一个组件非常简单。可以使用函数或者类来定义一个组件。下面是一个使用函数定义组件的例子：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">function HelloWorld(props) &#123;\n  return &lt;div&gt;Hello, &#123;props.name&#125;!&lt;&#x2F;div&gt;;\n&#125;</code></pre>\n\n<p>这个组件接受一个 <code>name</code> 参数，并将它插入到字符串中返回。</p>\n<h3 id=\"渲染组件\"><a href=\"#渲染组件\" class=\"headerlink\" title=\"渲染组件\"></a>渲染组件</h3><p>要渲染一个组件，可以使用 React 的 <code>ReactDOM.render()</code> 方法。下面是一个例子：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">ReactDOM.render(&lt;HelloWorld name&#x3D;&quot;React&quot; &#x2F;&gt;, document.getElementById(&quot;root&quot;));</code></pre>\n\n<p>这个例子将 <code>HelloWorld</code> 组件渲染到了 id 为 <code>root</code> 的 DOM 元素中。</p>\n<h3 id=\"组件的状态\"><a href=\"#组件的状态\" class=\"headerlink\" title=\"组件的状态\"></a>组件的状态</h3><p>组件的状态可以通过 <code>useState</code> 钩子来管理。下面是一个例子：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">function Counter() &#123;\n  const [count, setCount] &#x3D; useState(0);\n\n  function handleClick() &#123;\n    setCount(count + 1);\n  &#125;\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;Count: &#123;count&#125;&lt;&#x2F;p&gt;\n      &lt;button onClick&#x3D;&#123;handleClick&#125;&gt;Click me&lt;&#x2F;button&gt;\n    &lt;&#x2F;div&gt;\n  );\n&#125;</code></pre>\n\n<p>这个组件有一个状态 <code>count</code>，并且有一个按钮，当点击按钮时，<code>count</code> 的值会加 1。</p>\n<h2 id=\"React-入门案例\"><a href=\"#React-入门案例\" class=\"headerlink\" title=\"React 入门案例\"></a>React 入门案例</h2><p>下面是一个使用 React 实现的简单计数器应用：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">import React, &#123; useState &#125; from &quot;react&quot;;\nimport ReactDOM from &quot;react-dom&quot;;\n\nfunction Counter() &#123;\n  const [count, setCount] &#x3D; useState(0);\n\n  function handleClick() &#123;\n    setCount(count + 1);\n  &#125;\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;Count: &#123;count&#125;&lt;&#x2F;p&gt;\n      &lt;button onClick&#x3D;&#123;handleClick&#125;&gt;Click me&lt;&#x2F;button&gt;\n    &lt;&#x2F;div&gt;\n  );\n&#125;\n\nReactDOM.render(&lt;Counter &#x2F;&gt;, document.getElementById(&quot;root&quot;));</code></pre>\n\n<p>这个应用有一个计数器，当点击按钮时，计数器的值会加 1。</p>\n<p>这只是一个简单的例子，但它演示了 React 的基本概念和使用方法。希望本文能够帮助你入门 React。</p>\n","text":"React 快速入门指南React 是 Facebook 推出的用于构建用户界面的 JavaScript 库。它提供了一种声明式编程模式，使得构建复杂的 UI 变得更加容易。本文将介绍 React 的基本概念和使用方法。 React 的基本概念组件在 React 中，UI 被抽象...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"前端框架","slug":"前端框架","count":4,"path":"api/categories/前端框架.json"}],"tags":[{"name":"React","slug":"React","count":2,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#React-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97\"><span class=\"toc-text\">React 快速入门指南</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#React-%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">React 的基本概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">组件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JSX\"><span class=\"toc-text\">JSX</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%99%9A%E6%8B%9F-DOM\"><span class=\"toc-text\">虚拟 DOM</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#React-%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">React 的使用方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-React\"><span class=\"toc-text\">安装 React</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">创建组件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B8%B2%E6%9F%93%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">渲染组件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E7%9A%84%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">组件的状态</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#React-%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">React 入门案例</span></a></li></ol></li></ol>","author":{"name":"啡鹏","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2023/03/14/b9c0245a1e08709e.webp","link":"/","description":"一个跑马拉松的程序员","socials":{"github":"https://github.com/yupeng0512/yupeng0512.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zuo-ye-chen-guang","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JVM","uid":"0b1381c4a63c09e41167c5168339035a","slug":"JVM","date":"2023-04-18T15:48:52.000Z","updated":"2023-04-18T15:51:00.870Z","comments":true,"path":"api/articles/JVM.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2023/04/18/24189eeb829832cd.webp","text":"JVM：Java虚拟机Java虚拟机（Java Virtual Machine，JVM）是Java语言的核心，可以在不同的计算机上运行Java程序，实现Java语言的“一次编写，到处运行”的特性。本文将介绍JVM的核心原理和一些常用的调优技巧。 JVM的核心原理JVM是由Java...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"JVM","slug":"JVM","count":1,"path":"api/categories/JVM.json"}],"tags":[{"name":"JVM","slug":"JVM","count":1,"path":"api/tags/JVM.json"}],"author":{"name":"啡鹏","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2023/03/14/b9c0245a1e08709e.webp","link":"/","description":"一个跑马拉松的程序员","socials":{"github":"https://github.com/yupeng0512/yupeng0512.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zuo-ye-chen-guang","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数据库和缓存的强一致性保证","uid":"8a60037aef6ba9a559b27ade38e20dc5","slug":"数据库和缓存的强一致性保证","date":"2023-04-18T15:34:12.000Z","updated":"2023-04-18T15:40:47.998Z","comments":true,"path":"api/articles/数据库和缓存的强一致性保证.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2023/04/18/9f5d21de668f2dce.webp","text":"分布式一致性算法在分布式系统中，一致性是极其重要的一个问题。分布式一致性算法的目标是保证在分布式环境下多个节点的数据达成一致。本文将介绍4种常见的分布式一致性算法：2PC、3PC、Paxos和Raft，并解释它们的工作原理。 2PC2PC（Two-Phase Commit）是一个...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据库","slug":"数据库","count":6,"path":"api/categories/数据库.json"}],"tags":[{"name":"分布式一致性算法","slug":"分布式一致性算法","count":1,"path":"api/tags/分布式一致性算法.json"}],"author":{"name":"啡鹏","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2023/03/14/b9c0245a1e08709e.webp","link":"/","description":"一个跑马拉松的程序员","socials":{"github":"https://github.com/yupeng0512/yupeng0512.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zuo-ye-chen-guang","csdn":"","juejin":"","customs":{}}}}}