{"title":"数据库和缓存的强一致性保证","uid":"8a60037aef6ba9a559b27ade38e20dc5","slug":"数据库和缓存的强一致性保证","date":"2023-04-18T15:34:12.000Z","updated":"2023-04-18T15:40:47.998Z","comments":true,"path":"api/articles/数据库和缓存的强一致性保证.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2023/04/18/9f5d21de668f2dce.webp","content":"<h1 id=\"分布式一致性算法\"><a href=\"#分布式一致性算法\" class=\"headerlink\" title=\"分布式一致性算法\"></a>分布式一致性算法</h1><p>在分布式系统中，一致性是极其重要的一个问题。分布式一致性算法的目标是保证在分布式环境下多个节点的数据达成一致。本文将介绍4种常见的分布式一致性算法：2PC、3PC、Paxos和Raft，并解释它们的工作原理。</p>\n<h2 id=\"2PC\"><a href=\"#2PC\" class=\"headerlink\" title=\"2PC\"></a>2PC</h2><p>2PC（Two-Phase Commit）是一个广泛使用的分布式一致性算法。2PC算法分为两个阶段：投票阶段和提交阶段。</p>\n<p>在投票阶段，事务的协调者（coordinator）向所有参与者（participant）发送一个prepare请求，询问是否可以执行该事务。如果所有参与者都答复“可以”，则进入提交阶段。在提交阶段，协调者向所有参与者发送commit请求，要求所有参与者提交该事务。如果所有参与者都提交成功，则该事务被提交，否则回滚。</p>\n<p>2PC算法的优点是简单易懂，但它存在很多缺陷，例如单点故障和阻塞。</p>\n<h2 id=\"3PC\"><a href=\"#3PC\" class=\"headerlink\" title=\"3PC\"></a>3PC</h2><p>3PC（Three-Phase Commit）是2PC算法的改进版本。3PC算法增加了一个预提交阶段，以解决2PC算法中的问题。</p>\n<p>在预提交阶段，协调者向所有参与者发送一个can-commit请求，询问是否可以执行该事务。如果所有参与者都答复“可以”，则进入提交阶段。在提交阶段，协调者向所有参与者发送pre-commit请求，要求所有参与者准备提交该事务。如果所有参与者都准备好提交，则进入提交阶段。在提交阶段，协调者向所有参与者发送commit请求，要求所有参与者提交该事务。如果所有参与者都提交成功，则该事务被提交，否则回滚。</p>\n<p>3PC算法解决了2PC算法中的问题，但它仍然存在单点故障和阻塞的问题。</p>\n<h2 id=\"Paxos\"><a href=\"#Paxos\" class=\"headerlink\" title=\"Paxos\"></a>Paxos</h2><p>Paxos是一个经典的分布式一致性算法，它的目标是解决一个分布式系统中多个节点达成一致的问题。</p>\n<p>Paxos算法分为两个阶段：提议阶段和接受阶段。在提议阶段，一个节点称为提议者（proposer）提出一个提议。在接受阶段，其他节点称为接受者（acceptor），它们可以接受提议或拒绝提议。</p>\n<p>Paxos算法的过程非常复杂，但它可以保证在一个分布式系统中，多个节点可以达成一致。Paxos算法被广泛应用于分布式数据库、分布式锁等领域。</p>\n<h2 id=\"Raft\"><a href=\"#Raft\" class=\"headerlink\" title=\"Raft\"></a>Raft</h2><p>Raft是一种相对于Paxos更易于理解的分布式一致性算法。Raft算法分为三个阶段：领导者选举阶段、日志复制阶段和安全性阶段。</p>\n<p>在领导者选举阶段，Raft算法通过选举产生一个领导者。在日志复制阶段，领导者将其日志条目复制到所有的跟随者（follower）上。在安全性阶段，Raft算法通过多个限制条件确保一致性。</p>\n<p>Raft算法相对于Paxos算法来说更容易理解和实现。它被广泛应用于分布式系统中，例如分布式键值存储系统。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>分布式一致性算法是分布式系统中非常重要的一部分。本文介绍了4种常见的分布式一致性算法：2PC、3PC、Paxos和Raft，分别解释了它们的工作原理和优缺点。在实际应用中，我们需要根据具体的场景选择最适合的算法来保证分布式系统中的一致性。</p>\n","text":"分布式一致性算法在分布式系统中，一致性是极其重要的一个问题。分布式一致性算法的目标是保证在分布式环境下多个节点的数据达成一致。本文将介绍4种常见的分布式一致性算法：2PC、3PC、Paxos和Raft，并解释它们的工作原理。 2PC2PC（Two-Phase Commit）是一个...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"数据库","slug":"数据库","count":6,"path":"api/categories/数据库.json"}],"tags":[{"name":"分布式一致性算法","slug":"分布式一致性算法","count":1,"path":"api/tags/分布式一致性算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">分布式一致性算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2PC\"><span class=\"toc-text\">2PC</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3PC\"><span class=\"toc-text\">3PC</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Paxos\"><span class=\"toc-text\">Paxos</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Raft\"><span class=\"toc-text\">Raft</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">结论</span></a></li></ol></li></ol>","author":{"name":"啡鹏","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2023/03/14/b9c0245a1e08709e.webp","link":"/","description":"一个跑马拉松的程序员","socials":{"github":"https://github.com/yupeng0512/yupeng0512.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zuo-ye-chen-guang","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"React快速入门指南","uid":"3fbb98420a779e5fc825c93037d4aa9e","slug":"React快速入门指南","date":"2023-04-18T15:41:07.000Z","updated":"2023-04-18T15:43:18.304Z","comments":true,"path":"api/articles/React快速入门指南.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2023/03/29/92ec479377e5a687.webp","text":"React 快速入门指南React 是 Facebook 推出的用于构建用户界面的 JavaScript 库。它提供了一种声明式编程模式，使得构建复杂的 UI 变得更加容易。本文将介绍 React 的基本概念和使用方法。 React 的基本概念组件在 React 中，UI 被抽象...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"前端框架","slug":"前端框架","count":4,"path":"api/categories/前端框架.json"}],"tags":[{"name":"React","slug":"React","count":2,"path":"api/tags/React.json"}],"author":{"name":"啡鹏","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2023/03/14/b9c0245a1e08709e.webp","link":"/","description":"一个跑马拉松的程序员","socials":{"github":"https://github.com/yupeng0512/yupeng0512.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zuo-ye-chen-guang","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Vue快速入门指南","uid":"6327166ce691a346c5acc8d4b6bb10e7","slug":"Vue快速入门指南","date":"2023-04-18T15:25:12.000Z","updated":"2023-04-18T15:35:56.522Z","comments":true,"path":"api/articles/Vue快速入门指南.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2023/03/29/a611187c5672fde9.webp","text":"Vue快速入门指南Vue.js是一款流行的JavaScript框架，用于构建用户界面。它易于学习和使用，同时可以与其他库和框架无缝集成。本指南将帮助您快速入门Vue.js，并提供一个简单的案例来演示Vue.js的基本用法。 安装Vue.js您可以通过多种方式安装Vue.js，包括...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"前端框架","slug":"前端框架","count":4,"path":"api/categories/前端框架.json"}],"tags":[{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"author":{"name":"啡鹏","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2023/03/14/b9c0245a1e08709e.webp","link":"/","description":"一个跑马拉松的程序员","socials":{"github":"https://github.com/yupeng0512/yupeng0512.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zuo-ye-chen-guang","csdn":"","juejin":"","customs":{}}}}}