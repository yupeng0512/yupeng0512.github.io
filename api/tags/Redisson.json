{"name":"Redisson","slug":"Redisson","count":1,"postlist":[{"title":"Redisson分布式锁原理","uid":"ccf7352a57f14a8bc052972b9b2f87e5","slug":"Redisson分布式锁原理","date":"2023-04-08T16:50:57.000Z","updated":"2023-04-12T07:16:26.847Z","comments":true,"path":"api/articles/Redisson分布式锁原理.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2023/04/09/b6cb052c62216566.png","text":"Redisson实现分布式锁一、高效分布式锁1.互斥在分布式高并发的条件下，最需要保证同一时刻只能有一个线程获得锁，这是最基本的一点。 2.防止死锁在分布式高并发的条件下，比如有个线程获得锁的同时，还没有来得及去释放锁，就因为系统故障或者其它原因使它无法执行释放锁的命令,导致其它...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"源码","slug":"源码","count":2,"path":"api/categories/源码.json"}],"tags":[{"name":"Redisson","slug":"Redisson","count":1,"path":"api/tags/Redisson.json"}],"author":{"name":"啡鹏","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2023/03/14/b9c0245a1e08709e.webp","link":"/","description":"一个跑马拉松的程序员","socials":{"github":"https://github.com/yupeng0512/yupeng0512.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/zuo-ye-chen-guang","csdn":"","juejin":"","customs":{}}}}]}